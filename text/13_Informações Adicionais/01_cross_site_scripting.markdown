## Protecting from Cross Site Scripting

In Rails 2.0 the file *application.rb* looks like this:

	class ApplicationController < ActionController::Base
	  helper :all

	  protect_from_forgery
	end

Notice the call to the method **protect\_from\_forgery**.
 
Have you heard about Cross Site Scripting? This is the name of a security failure easily found in most websites and web applications on the web today. It allows evil people (such as teenagers with nothing to do and no social life) to alter the content of web pages, perform fishing attacks, take over the control of the browser through JavaScript code. In most cases force the user to execute a command without knowledge. That last type of attack is called cross-site request forgery.

Cross Site Request Forgery is a type of attack that forces legit users to execute a series of commands without even knowing. And with the increasing use of Ajax, things are getting even worse.

Actually, this method is useful to make sure that all forms your application is receiving are coming from only your application, and not from a link in another site. It achieves this by including a token based on the session in all forms and Ajax requests generated by Rails. Later it checks the authenticity of this token in the controller.

Remember that GET requests are not protected. But it won't be a problem if we use it only to bring data, and never to alter or save anything in our database.

If you want to learn more about CSRF (Cross-Site Request Forgery) use the addresses below:

* [http://www.nomedojogo.com/2008/01/14/como-um-garoto-chamado-samy-pode-derrubar-seu-site/isc.sans.org/diary.html?storyid=1750](http://www.nomedojogo.com/2008/01/14/como-um-garoto-chamado-samy-pode-derrubar-seu-site/isc.sans.org/diary.html?storyid=1750)

* [http://www.nomedojogo.com/2008/01/14/como-um-garoto-chamado-samy-pode-derrubar-seu-site/isc.sans.org/diary.html?storyid=1750](http://www.nomedojogo.com/2008/01/14/como-um-garoto-chamado-samy-pode-derrubar-seu-site/isc.sans.org/diary.html?storyid=1750)

But remember that this is not a definitive solution to our problem, or like we usually say, it's not a silver bullet.
